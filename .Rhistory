scATOMICTree
library(scATOMIC)
tree_results_lung <- scATOMICTree(predictions_list = cell_predictions, summary_matrix = results_lung,
interactive_mode = T, collapsed = T, save_results = F)
#if(!require(devtools)) install.packages("devtools")
#devtools::install_github("choisy/cutoff")
#devtools::install_github("abelson-lab/scATOMIC")
#install.packages("Rmagic")
library(scATOMIC)
library(plyr)
library(dplyr)
library(data.table)
library(randomForest)
library(caret)
library(parallel)
library(reticulate)
library(Rmagic)
library(Matrix)
library(Seurat)
library(agrmt)
library(cutoff)
library(copykat)
#sparse_matrix <- as(as.matrix(input_matrix), "sparseMatrix")
lung_cancer_demo_data <- demo_lung_data
head(lung_cancer_demo_data)
pct_mt <- colSums(lung_cancer_demo_data[grep("^MT-", row.names(lung_cancer_demo_data)),])/colSums(lung_cancer_demo_data) * 100
nFeatureRNA <- apply(lung_cancer_demo_data, 2,function(x){length(which(x != 0))})
lung_cancer_demo_data <- lung_cancer_demo_data[, names(which(pct_mt < 25))]
lung_cancer_demo_data <- lung_cancer_demo_data[, intersect(names(which(nFeatureRNA > 500)), colnames(lung_cancer_demo_data))]
cell_predictions <- run_scATOMIC(lung_cancer_demo_data)
names(cell_predictions)
results_lung <- create_summary_matrix(prediction_list = cell_predictions, use_CNVs = F, modify_results = T, mc.cores = 5, raw_counts = lung_cancer_demo_data, min_prop = 0.5 )
results_lung
tree_results_lung <- scATOMICTree(predictions_list = cell_predictions, summary_matrix = results_lung,
interactive_mode = T, collapsed = T, save_results = F)
scATOMICTree
devtools::document()
devtools::install()
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
row.names(metadata_kinker) <- metadata_kinker$NAME
library(pheatmap)
metadata_kinker_for_heatmap <- as.matrix(metadata_kinker[,c("SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")])
Cancer_Type = data.frame("Cancer_Type" = metadata_kinker$Cancer_type)
row.names(Cancer_Type) <- row.names(metadata_kinker_for_heatmap)
library(scATOMIC)
library(plyr)
library(dplyr)
library(data.table)
library(randomForest)
library(caret)
library(parallel)
library(reticulate)
library(Rmagic)
library(Matrix)
library(Seurat)
library(agrmt)
library(cutoff)
library(copykat)
library(ggplot2)
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker[sample(1:nrow(metadata_kinker), size = 5000),]
metadata_kinker <- metadata_kinker[sample(1:nrow(metadata_kinker), size = 5000),]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
row.names(metadata_kinker) <- metadata_kinker$NAME
library(pheatmap)
metadata_kinker_for_heatmap <- as.matrix(metadata_kinker[,c("SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")])
Cancer_Type = data.frame("Cancer_Type" = metadata_kinker$Cancer_type)
row.names(Cancer_Type) <- row.names(metadata_kinker_for_heatmap)
pheatmap(mat = metadata_kinker_for_heatmap, show_rownames = F, annotation_row = Cancer_Type, cluster_cols = F)
class(metadata_kinker_for_heatmap[,1])
View(metadata_kinker)
View(metadata_kinker_for_heatmap)
as.numeric(metadata_kinker_for_heatmap)
metadata_kinker_for_heatmap <- apply(metadata_kinker_for_heatmap, 2, as.numeric)
metadata_kinker_for_heatmap
row.names(metadata_kinker_for_heatmap)
row.names(metadata_kinker_for_heatmap) <- row.names(metadata_kinker)
pheatmap(mat = metadata_kinker_for_heatmap, show_rownames = F, annotation_row = Cancer_Type, cluster_cols = F)
pheatmap(mat = t(metadata_kinker_for_heatmap), show_colnames = F, annotation_col = t(Cancer_Type), cluster_rows = F)
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
#get average for each cell line
cell_lines <- levels(as.factor(metadata_kinker$Cell_line))
i =1
temp_mat <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),-c(1:3)]
View(temp_mat)
temp_mat <- colMeans(temp_mat)
View(temp_mat)
temp_mat <- apply(temp_mat, 2, as.numeric)
colMeans(temp_mat)
mean(temp_mat[,"SkinPig_score"])
temp_mat <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),-c(1:3)]
temp_mat <- apply(temp_mat, 2, as.numeric)
temp_mat <- as.data.frame(colMeans(temp_mat))
View(temp_mat)
View(temp_mat)
metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),"Cancer_type"][1]
for(i in 1:length(cell_lines)){
if(i ==1){
temp_mat <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),-c(1:3)]
temp_mat <- apply(temp_mat, 2, as.numeric)
average_matrix <- as.data.frame(colMeans(temp_mat))
colnames(average_matrix) <- cell_lines[i]
cancer_type <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),"Cancer_type"][1]
names(cancer_type)[i] <- cell_lines[i]
} else{
temp_mat <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),-c(1:3)]
temp_mat <- apply(temp_mat, 2, as.numeric)
temp_mat <- as.data.frame(colMeans(temp_mat))
colnames(temp_mat) <- cell_lines[i]
average_matrix <- cbind(average_matrix, temp_mat)
cancer_type <- c(cancer_type, metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),"Cancer_type"][1])
names(cancer_type)[i] <- cell_lines[i]
}
}
View(average_matrix)
cancer_type
as.data.frame(cancer_type)
cancer_type <- as.data.frame(cancer_type)
pheatmap(mat = average_matrix, show_rownames = T,show_colnames = F, annotation_col  = cancer_type, cluster_rows = F)
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[sample(1:nrow(metadata_kinker), size = 5000),]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
row.names(metadata_kinker) <- metadata_kinker$NAME
library(pheatmap)
metadata_kinker_for_heatmap <- as.matrix(metadata_kinker[,c("SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")])
Cancer_Type = data.frame("Cancer_Type" = metadata_kinker$Cancer_type)
row.names(Cancer_Type) <- row.names(metadata_kinker_for_heatmap)
metadata_kinker_for_heatmap <- apply(metadata_kinker_for_heatmap, 2, as.numeric)
row.names(metadata_kinker_for_heatmap) <- row.names(metadata_kinker)
pheatmap(mat = metadata_kinker_for_heatmap, show_rownames = F, annotation_row = Cancer_Type, cluster_cols = F)
pheatmap(mat = t(metadata_kinker_for_heatmap), show_colnames = F, annotation_col = Cancer_Type, cluster_rows = F)
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
row.names(metadata_kinker) <- metadata_kinker$NAME
library(pheatmap)
metadata_kinker_for_heatmap <- as.matrix(metadata_kinker[,c("SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")])
Cancer_Type = data.frame("Cancer_Type" = metadata_kinker$Cancer_type)
row.names(Cancer_Type) <- row.names(metadata_kinker_for_heatmap)
metadata_kinker_for_heatmap <- apply(metadata_kinker_for_heatmap, 2, as.numeric)
row.names(metadata_kinker_for_heatmap) <- row.names(metadata_kinker)
pheatmap(mat = t(metadata_kinker_for_heatmap), show_colnames = F, annotation_col = Cancer_Type, cluster_rows = F)
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
#get average for each cell line
cell_lines <- levels(as.factor(metadata_kinker$Cell_line))
for(i in 1:length(cell_lines)){
if(i ==1){
temp_mat <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),-c(1:3)]
temp_mat <- apply(temp_mat, 2, as.numeric)
average_matrix <- as.data.frame(colMeans(temp_mat))
colnames(average_matrix) <- cell_lines[i]
cancer_type <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),"Cancer_type"][1]
names(cancer_type)[i] <- cell_lines[i]
} else{
temp_mat <- metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),-c(1:3)]
temp_mat <- apply(temp_mat, 2, as.numeric)
temp_mat <- as.data.frame(colMeans(temp_mat))
colnames(temp_mat) <- cell_lines[i]
average_matrix <- cbind(average_matrix, temp_mat)
cancer_type <- c(cancer_type, metadata_kinker[which(metadata_kinker$Cell_line == cell_lines[i]),"Cancer_type"][1])
names(cancer_type)[i] <- cell_lines[i]
}
}
cancer_type <- as.data.frame(cancer_type)
pheatmap(mat = average_matrix, show_rownames = T,show_colnames = F, annotation_col  = cancer_type, cluster_rows = F)
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
row.names(metadata_kinker) <- metadata_kinker$NAME
library(pheatmap)
metadata_kinker_for_heatmap <- as.matrix(metadata_kinker[,c("SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")])
Cancer_Type = data.frame("Cancer_Type" = metadata_kinker$Cancer_type)
row.names(Cancer_Type) <- row.names(metadata_kinker_for_heatmap)
metadata_kinker_for_heatmap <- apply(metadata_kinker_for_heatmap, 2, as.numeric)
row.names(metadata_kinker_for_heatmap) <- row.names(metadata_kinker)
p1 <- pheatmap(mat = t(metadata_kinker_for_heatmap), show_colnames = F, annotation_col = Cancer_Type, cluster_rows = F)
metadata_kinker <- as.data.frame(fread("~/Downloads/Metadata_kinker.txt"))
metadata_kinker <- metadata_kinker[-1,]
metadata_kinker <- metadata_kinker[sample(1:nrow(metadata_kinker), size = 20000),]
metadata_kinker <- metadata_kinker[,c("NAME","Cell_line", "Cancer_type", "SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")]
metadata_kinker <- metadata_kinker[which(!metadata_kinker$Cancer_type %in% c("Thyroid Cancer", "Head and Neck Cancer")),]
row.names(metadata_kinker) <- metadata_kinker$NAME
library(pheatmap)
metadata_kinker_for_heatmap <- as.matrix(metadata_kinker[,c("SkinPig_score","EMTI_score","EMTII_score",
"EMTIII_score","IFNResp_score","p53Sen_score","EpiSen_score",
"StressResp_score","ProtMatu_score","ProtDegra_score")])
Cancer_Type = data.frame("Cancer_Type" = metadata_kinker$Cancer_type)
row.names(Cancer_Type) <- row.names(metadata_kinker_for_heatmap)
metadata_kinker_for_heatmap <- apply(metadata_kinker_for_heatmap, 2, as.numeric)
row.names(metadata_kinker_for_heatmap) <- row.names(metadata_kinker)
p1 <- pheatmap(mat = t(metadata_kinker_for_heatmap), show_colnames = F, annotation_col = Cancer_Type, cluster_rows = F)
library(UpSetR)
layer_1_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_1.RDS")
#rank by fold change
CD8_markers <- layer_1_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 50, wt = avg_log2FC)
NK_markers <- layer_1_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 50, wt = avg_log2FC)
list_T_NK_layer_1 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene)
upset(fromList(list_T_NK_layer_1),  order.by = "freq", mainbar.y.label =  "")
layer_2_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_2_blood.RDS")
#rank by fold change
CD8_markers <- layer_2_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 50, wt = avg_log2FC)
NK_markers <- layer_2_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 50, wt = avg_log2FC)
list_T_NK_layer_2 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene)
upset(fromList(list_T_NK_layer_2),  order.by = "freq", mainbar.y.label =  "")
layer_3_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_3_TNK.RDS")
#rank by fold change
CD8_markers <- layer_3_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 50, wt = avg_log2FC)
NK_markers <- layer_3_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 50, wt = avg_log2FC)
list_T_NK_layer_3 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene)
upset(fromList(list_T_NK_layer_3),  order.by = "freq", mainbar.y.label =  "",)
layer_4_CD8_NK_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_4_CD8_NK_cell.RDS")
#rank by fold change
CD8_markers_layer_4 <- layer_4_CD8_NK_markers[["CD8+ T cell"]]
CD8_markers_layer_4 <- CD8_markers_layer_4 %>% top_n(n = 50, wt = avg_log2FC)
NK_markers_layer_4 <- layer_4_CD8_NK_markers[["Natural killer cell"]]
NK_markers_layer_4 <- NK_markers_layer_4 %>% top_n(n = 50, wt = avg_log2FC)
list_T_NK_layer_4_CD8_NK_layer_4 <- list(CD8_markers_layer_4 = CD8_markers_layer_4$gene,
NK_markers_layer_4 = NK_markers_layer_4$gene)
upset(fromList(list_T_NK_layer_4_CD8_NK_layer_4),  order.by = "freq", mainbar.y.label =  "")
layer_2_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_2_blood.RDS")
#rank by fold change
CD8_markers <- layer_2_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 50, wt = avg_log2FC)
NK_markers <- layer_2_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 50, wt = avg_log2FC)
CD4_markers <- layer_2_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 50, wt = avg_log2FC)
list_T_NK_layer_2 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_2),  order.by = "freq", mainbar.y.label =  "")
list_T_NK_layer_1 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_1),  order.by = "freq", mainbar.y.label =  "")
layer_1_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_1.RDS")
#rank by fold change
CD8_markers <- layer_1_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_1_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_1_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_1 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_1),  order.by = "freq", mainbar.y.label =  "")
layer_2_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_2_blood.RDS")
#rank by fold change
CD8_markers <- layer_2_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_2_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_2_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_2 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_2),  order.by = "freq", mainbar.y.label =  "")
layer_3_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_3_TNK.RDS")
#rank by fold change
CD8_markers <- layer_3_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_3_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_3_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_3 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_3),  order.by = "freq", mainbar.y.label =  "",)
#t cell comparision supplement
layer_1_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_1.RDS")
layer_1_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_1.RDS")
#rank by fold change
CD8_markers <- layer_1_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_1_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_1_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
B_markers <- layer_1_markers[["B cell"]]
B_markers <- B_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_1 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene,
B_markers = B_markers$gene)
upset(fromList(list_T_NK_layer_1),  order.by = "freq", mainbar.y.label =  "")
layer_2_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_2_blood.RDS")
#rank by fold change
CD8_markers <- layer_2_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_2_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_2_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
B_markers <- layer_2_markers[["B cell"]]
B_markers <- B_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_2 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene,
B_markers = B_markers$gene)
upset(fromList(list_T_NK_layer_2),  order.by = "freq", mainbar.y.label =  "")
#t cell comparision supplement
layer_1_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_1.RDS")
#rank by fold change
CD8_markers <- layer_1_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_1_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_1_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_1 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_1),  order.by = "freq", mainbar.y.label =  "")
layer_2_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_2_blood.RDS")
#rank by fold change
CD8_markers <- layer_2_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_2_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_2_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_2 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_2),  order.by = "freq", mainbar.y.label =  "")
layer_3_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_3_TNK.RDS")
#rank by fold change
CD8_markers <- layer_3_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_3_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_3_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_3 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
upset(fromList(list_T_NK_layer_3),  order.by = "freq", mainbar.y.label =  "",)
layer_4_CD8_NK_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_4_CD8_NK_cell.RDS")
#rank by fold change
CD8_markers_layer_4 <- layer_4_CD8_NK_markers[["CD8+ T cell"]]
CD8_markers_layer_4 <- CD8_markers_layer_4 %>% top_n(n = 25, wt = avg_log2FC)
NK_markers_layer_4 <- layer_4_CD8_NK_markers[["Natural killer cell"]]
NK_markers_layer_4 <- NK_markers_layer_4 %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_4_CD8_NK_layer_4 <- list(CD8_markers_layer_4 = CD8_markers_layer_4$gene,
NK_markers_layer_4 = NK_markers_layer_4$gene)
upset(fromList(list_T_NK_layer_4_CD8_NK_layer_4),  order.by = "freq", mainbar.y.label =  "")
layer_1_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_1.RDS")
#rank by fold change
CD8_markers <- layer_1_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_1_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_1_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_1 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
plot_1 <- upset(fromList(list_T_NK_layer_1),  order.by = "freq", mainbar.y.label =  "")
layer_2_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_2_blood.RDS")
#rank by fold change
CD8_markers <- layer_2_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_2_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_2_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_2 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
plot_2 <- upset(fromList(list_T_NK_layer_2),  order.by = "freq", mainbar.y.label =  "")
layer_3_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_3_TNK.RDS")
#rank by fold change
CD8_markers <- layer_3_markers[["CD8+ T cell"]]
CD8_markers <- CD8_markers %>% top_n(n = 25, wt = avg_log2FC)
NK_markers <- layer_3_markers[["Natural killer cell"]]
NK_markers <- NK_markers %>% top_n(n = 25, wt = avg_log2FC)
CD4_markers <- layer_3_markers[["CD4+ T cell"]]
CD4_markers <- CD4_markers %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_3 <- list(CD8_markers = CD8_markers$gene,
NK_markers = NK_markers$gene,
CD4_markers = CD4_markers$gene)
plot_3 <- upset(fromList(list_T_NK_layer_3),  order.by = "freq", mainbar.y.label =  "",)
layer_4_CD8_NK_markers <- readRDS("~/Documents/classifier_tests_nov21/markers_retrain_paper/markers_layer_4_CD8_NK_cell.RDS")
#rank by fold change
CD8_markers_layer_4 <- layer_4_CD8_NK_markers[["CD8+ T cell"]]
CD8_markers_layer_4 <- CD8_markers_layer_4 %>% top_n(n = 25, wt = avg_log2FC)
NK_markers_layer_4 <- layer_4_CD8_NK_markers[["Natural killer cell"]]
NK_markers_layer_4 <- NK_markers_layer_4 %>% top_n(n = 25, wt = avg_log2FC)
list_T_NK_layer_4_CD8_NK_layer_4 <- list(CD8_markers_layer_4 = CD8_markers_layer_4$gene,
NK_markers_layer_4 = NK_markers_layer_4$gene)
plot_4 <- upset(fromList(list_T_NK_layer_4_CD8_NK_layer_4),  order.by = "freq", mainbar.y.label =  "")
plot_1 + plot_2 + plot_3 + plot_4
plot_1
plot_2
plot_3
plot_4
plot_2
plot_3
test <- readRDS("~/Documents/classifier_tests_nov21/classification_results/v4_forced_classification_files_no_CNV_final_for_paper/Lee_et_al_CRC_patient_SMC01count_mat.RDS_classification_no_CNV.RDS")
View(test)
test <- readRDS("~/Documents/TCGA_RNA_counts/new_datasets/lee_et_al_2020_32451460_colorectal_GSE132465/CRC_patient1_seurat.RDS")
library(scATOMIC)
library(plyr)
library(dplyr)
library(data.table)
library(randomForest)
library(caret)
library(parallel)
library(reticulate)
library(Rmagic)
library(Matrix)
library(Seurat)
library(agrmt)
library(cutoff)
library(copykat)
library(ggplot2)
count_mat <- test[["RNA"]]@counts
predictions_CRC_1 <- run_scATOMIC(predictions_CRC_1)
predictions_CRC_1 <- run_scATOMIC(count_mat)
View(predictions_CRC_1[["layer_1"]])
write.csv(predictions_CRC_1[["layer_1"]], "~/Downloads/layer_1_CRC_scores.csv", quote = F, col.names = T, row.names = T)
res <- readRDS("~/Documents/classifier_tests_nov21/classification_results/v4_forced_classification_files_no_CNV_final_for_paper/Lee_et_al_CRC_patient_SMC01count_mat.RDS_classification_no_CNV.RDS")
View(res)
test <- readRDS("~/Documents/TCGA_RNA_counts/new_datasets/qian_et_al_pan_cancer/Ovarian_Cancer/Ovarian_seurat_processed.RDS")
table(test@meta.data$PatientNumber)
test <- subset(test, cells = row.names(test@meta.data)[which(test@meta.data$PatientNumber == "12")])
count_mat <- test[["RNA"]]@counts
predictions_CRC_1 <- run_scATOMIC(count_mat)
predictions_OvC_1 <- predictions_CRC_1
View(predictions_OvC_1[["layer_1"]])
write.csv(predictions_OvC_1[["layer_1"]], "~/Downloads/layer_1_ovc_scores.csv", quote = F, col.names = T, row.names = T)
res <- create_summary_matrix(prediction_list = predictions_OvC_1, raw_counts = count_mat)
View(res)
write.csv(predictions_OvC_1[["layer_2_non_blood"]], "~/Downloads/layer_1_ovc_scores.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_2_non_blood"]], "~/Downloads/layer_2_ovc_scores.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_2_blood"]], "~/Downloads/layer_2_ovc_scores.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_3_stromal"]]], "~/Downloads/layer_3", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_3_stromal"]], "~/Downloads/layer_3", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_3_stromal"]], "~/Downloads/layer_3.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_3_non_stromal"]], "~/Downloads/layer_3.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_3_myeloid"]], "~/Downloads/layer_3.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_3_TNK"]], "~/Downloads/layer_3.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_4_non_GI"]], "~/Downloads/layer_4.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_5_ov_endo_kid"]], "~/Downloads/layer_4.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_4_CD8_NK"]], "~/Downloads/layer_4.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_4_CD4_CD8"]], "~/Downloads/layer_4.csv", quote = F, col.names = T, row.names = T)
write.csv(predictions_OvC_1[["layer_1"]], "~/Downloads/layer_1_ovc_scores.csv", quote = F, col.names = T, row.names = T)
