colnames(prostate_normal_mat) <- paste0("normal_TS_", colnames(prostate_normal_mat) )
saveRDS(prostate_normal_mat, "~/Documents/tabula_sapiens/sample_sparse_matrices/normal_prostate_count_mat.RDS")
#skin
rm(list = ls())
Convert("~/Documents/tabula_sapiens/TS_Skin.h5ad", dest = "~/Documents/tabula_sapiens/TS_skin.h5seurat")
skin_TS <- LoadH5Seurat("~/Documents/tabula_sapiens/TS_skin.h5seurat", assays = "raw_counts")
DimPlot(skin_TS, group.by = "free_annotation", label = T)
DimPlot(skin_TS, group.by = "compartment", label = T)
#DimPlot(skin_TS, group.by = "donor", label = T)
table(skin_TS@meta.data$free_annotation)
skin_normal_index <- row.names(skin_TS@meta.data)[which(skin_TS@meta.data$compartment %in% c(
"epithelial", "stromal"
))]
skin_normal_index_sample <- skin_normal_index[sample(1:length(skin_normal_index), 1000)]
skin_normal_mat <- skin_TS@assays$raw_counts@counts[,skin_normal_index_sample]
colnames(skin_normal_mat) <- paste0("normal_TS_", colnames(skin_normal_mat) )
saveRDS(skin_normal_mat, "~/Documents/tabula_sapiens/sample_sparse_matrices/normal_skin_count_mat.RDS")
Convert("~/Documents/tabula_sapiens/TS_Uterus.h5ad", dest = "~/Documents/tabula_sapiens/TS_uterus.h5seurat")
#uterus
rm(list = ls())
uterus_TS <- LoadH5Seurat("~/Documents/tabula_sapiens/TS_uterus.h5seurat", assays = "raw_counts")
DimPlot(uterus_TS, group.by = "free_annotation", label = T)
DimPlot(uterus_TS, group.by = "compartment", label = T)
uterus_normal_index <- row.names(uterus_TS@meta.data)[which(uterus_TS@meta.data$compartment %in% c(
"epithelial", "stromal"
))]
uterus_normal_index_sample <- uterus_normal_index[sample(1:length(uterus_normal_index), 1000)]
uterus_normal_mat <- uterus_TS@assays$raw_counts@counts[,uterus_normal_index_sample]
colnames(uterus_normal_mat) <- paste0("normal_TS_", colnames(uterus_normal_mat) )
saveRDS(uterus_normal_mat, "~/Documents/tabula_sapiens/sample_sparse_matrices/normal_uterus_count_mat.RDS")
?agree
library(scATOMIC)
library(plyr)
library(dplyr)
library(data.table)
library(randomForest)
library(caret)
library(parallel)
library(reticulate)
library(Rmagic)
library(Matrix)
library(Seurat)
library(agrmt)
library(cutoff)
library(copykat)
library(ggplot2)
library(irr)
library(mltools)
library(DescTools)
?agree
library(scATOMIC)
library(plyr)
library(dplyr)
library(data.table)
library(randomForest)
library(caret)
library(parallel)
library(reticulate)
library(Rmagic)
library(Matrix)
library(Seurat)
library(agrmt)
library(cutoff)
library(copykat)
library(ggplot2)
load("~/Documents/classifier_tests_nov21/dec21_processed_results.RData")
rm(list = setdiff(ls(), "primary_matrix"))
results_cancer_sig <- readRDS("~/Documents/pan_cancer_signature/results_compare.RDS")
results_cancer_sig <- results_cancer_sig[-which(results_cancer_sig$dataset == "Dong_et_al_nbm"),]
# fix dong
dong_files <- list.files("~/Documents/pan_cancer_signature/re_run_dong/")
for(i in 1:length(dong_files)){
res_mat <- readRDS(paste0("~/Documents/pan_cancer_signature/re_run_dong/", dong_files[i]))
patient <- paste0("T",strsplit(dong_files[i], "_T|_gene")[[1]][2])
if(patient == "T175"){
patient = "T174"
}
res_mat$patient <- patient
res_mat$cell_names <- paste0(patient, "_", res_mat$cell_names)
row.names(res_mat) <- res_mat$cell_names
res_mat$disease <- "Neuroblastoma"
res_mat$sampling_site <- "Neuroblastoma"
res_mat$dataset <- "Dong_et_al_nbm"
res_mat$cell_type_basic <- "fixed_nbm"
res_mat$cell_type_specific <- "fixed_nbm"
res_mat$cell_types_modified <- "fixed_nbm"
res_mat$truth <- "fixed_nbm"
res_mat <- res_mat[,colnames(results_cancer_sig)]
results_cancer_sig <- rbind(results_cancer_sig, res_mat)
}
nrow(results_cancer_sig[which(results_cancer_sig$dataset == "Dong_et_al_nbm"),])
#results_cancer_sig <- results_cancer_sig[-which(results_cancer_sig$patient == "sarcoma_951"),]
#diploid and normal signature -> in scATOMIC normal (blood or stromal)
#aneuploid vs cancer -> in scATOMIC pre-post-hoc cancer
#line graph of x axis being patient, facet cancer type, y axis is ncells 1 line scATOMIC (calling cancer for cancer normal in normal) line 2 is copykat line 3 copykat NAs
#highlight of NAs being rampant (in the graph), 1 case of no reference cells 2 case of low CNVs (due to genome not instable)
#highlight limitation of cell cycle datasets,
cancer_classes <- levels(as.factor(results_cancer_sig$layer_6))[grep("Non Blood Cell|GI Tract Cell|Epithelial Cell|Non Stromal Cell|Breast/Lung/Prostate|Ovarian/Endometrial/Kidney|Cancer|oma$",levels(as.factor(results_cancer_sig$layer_6)) )]
normal_classes <- levels(as.factor(results_cancer_sig$layer_6))[-grep("Non Blood Cell|GI Tract Cell|Epithelial Cell|Non Stromal Cell|Breast/Lung/Prostate|Ovarian/Endometrial/Kidney|Cancer|oma$",levels(as.factor(results_cancer_sig$layer_6)) )]
results_cancer_sig$disease <- gsub("Breast Cancer ER\\+|Breast Cancer HER2\\+|Breast Cancer TNBC", "Breast Cancer", results_cancer_sig$disease)
results_cancer_sig$disease <- gsub("clear cell renal carcinoma|papillary renal cell carcinoma", "Kidney Cancer", results_cancer_sig$disease)
results_cancer_sig$disease <- gsub("Glioblastoma", "Brain Cancer", results_cancer_sig$disease)
results_cancer_sig$disease <- gsub("prostate cancer", "Prostate Cancer", results_cancer_sig$disease)
results_cancer_sig_aneuploid_filtered <- results_cancer_sig[which(results_cancer_sig$CNV_status %in% "aneuploid" & results_cancer_sig$layer_6 %in% c(cancer_classes)), ]
results_cancer_sig_aneuploid_filtered <- results_cancer_sig[which( (results_cancer_sig$CNV_status %in% "aneuploid" & results_cancer_sig$layer_6 %in% c(cancer_classes))|
(is.na(results_cancer_sig$CNV_status) & results_cancer_sig$pan_cancer_cluster == "Cancer" )) ,]
results_cancer_sig_aneuploid_filtered$CNV_status = "aneuploid"
primary_datasets <- intersect(levels(as.factor(results_cancer_sig_aneuploid_filtered$patient)),levels(as.factor(primary_matrix$patient)))
results_cancer_sig_aneuploid_filtered <- results_cancer_sig_aneuploid_filtered[which(results_cancer_sig_aneuploid_filtered$patient %in%primary_datasets),]
patients_fig2 <- fread("~/Downloads/patients_use.txt", header = F, sep = "")
results_cancer_sig_aneuploid_filtered <- results_cancer_sig_aneuploid_filtered[which(paste0(results_cancer_sig_aneuploid_filtered$patient, "_", results_cancer_sig_aneuploid_filtered$disease) %in% patients_fig2$V1),]
#remove patients with < 30 cells
#patients_keep <- names(which(table(results_cancer_sig_aneuploid_filtered$patient) >30))
#results_cancer_sig_aneuploid_filtered <- results_cancer_sig_aneuploid_filtered[which(results_cancer_sig_aneuploid_filtered$patient %in% patients_keep),]
unfiltered_mat <- readRDS("~/Documents/classifier_tests_nov21/classification_results/nov22_combined_matrix_results_unfiltered.RDS")
results_cancer_sig_aneuploid_filtered[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_aneuploid_filtered)),"patient"] <- paste0(unfiltered_mat[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_aneuploid_filtered)),"patient"], "_",unfiltered_mat[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_aneuploid_filtered)),"sampling_site"] )
results_cancer_sig_aneuploid_filtered[which(results_cancer_sig_aneuploid_filtered$patient == "NBM_244"),"patient"] <- "NBM_244_unclear"
results_cancer_sig_aneuploid_filtered[which(results_cancer_sig_aneuploid_filtered$dataset == "Dong_et_al_nbm"),"patient"] <- paste0(results_cancer_sig_aneuploid_filtered[which(results_cancer_sig_aneuploid_filtered$dataset == "Dong_et_al_nbm"),"patient"],"_",
results_cancer_sig_aneuploid_filtered[which(results_cancer_sig_aneuploid_filtered$dataset == "Dong_et_al_nbm"),"sampling_site"] )
results_cancer_sig_aneuploid_filtered$patient <- gsub("_Neuroblastoma_Neuroblastoma", "_Neuroblastoma", results_cancer_sig_aneuploid_filtered$patient)
results_cancer_sig_aneuploid_filtered$patient <- gsub(" ", "_", results_cancer_sig_aneuploid_filtered$patient)
patients_final <- levels(as.factor(paste0(primary_matrix$patient,"_", primary_matrix$sampling_site)))
patients_now <- levels(as.factor(results_cancer_sig_aneuploid_filtered$patient))
results_cancer_sig_aneuploid_filtered <- results_cancer_sig_aneuploid_filtered[which(results_cancer_sig_aneuploid_filtered$patient %in% patients_final),]
#pan cancer cluster cancer
length(levels(as.factor(results_cancer_sig_aneuploid_filtered$patient)))
results_cancer_sig_aneuploid_filtered_cells_CS <- results_cancer_sig_aneuploid_filtered[,c( "pan_cancer_cluster", "patient", "disease")]
results_cancer_sig_aneuploid_filtered_cells_CS_counts <- plyr::ddply(results_cancer_sig_aneuploid_filtered_cells_CS, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_aneuploid_filtered_cells_CS_counts)[4] <- "Freq"
results_cancer_sig_aneuploid_filtered_cells_CS_counts$mode = "Cancer_Sig"
results_cancer_sig_aneuploid_filtered_cells_CNV <- results_cancer_sig_aneuploid_filtered[,c( "CNV_status", "patient","disease")]
colnames(results_cancer_sig_aneuploid_filtered_cells_CNV)[1] <- "pan_cancer_cluster"
results_cancer_sig_aneuploid_filtered_cells_CNV_counts <- plyr::ddply(results_cancer_sig_aneuploid_filtered_cells_CNV, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_aneuploid_filtered_cells_CNV_counts)[4] <- "Freq"
results_cancer_sig_aneuploid_filtered_cells_CNV_counts$mode = "CNV"
results_cancer_sig_aneuploid_filtered_cells_bar <- rbind(results_cancer_sig_aneuploid_filtered_cells_CS_counts, results_cancer_sig_aneuploid_filtered_cells_CNV_counts)
results_cancer_sig_aneuploid_filtered_cells_bar <- results_cancer_sig_aneuploid_filtered_cells_bar[order(results_cancer_sig_aneuploid_filtered_cells_bar$patient), ]
results_cancer_sig_aneuploid_filtered_cells_bar_fil <- results_cancer_sig_aneuploid_filtered_cells_bar
#pan cancer cluster cancer
#cancer cells only
results_cancer_sig_cancer_filtered <- results_cancer_sig[which(results_cancer_sig$layer_6 %in% c(cancer_classes)), ]
#primary samples only
primary_datasets <- intersect(levels(as.factor(results_cancer_sig_cancer_filtered$patient)),levels(as.factor(primary_matrix$patient)))
results_cancer_sig_cancer_filtered <- results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$patient %in%primary_datasets),]
patients_fig2 <- fread("~/Downloads/patients_use.txt", header = F, sep = "")
results_cancer_sig_cancer_filtered <- results_cancer_sig_cancer_filtered[which(paste0(results_cancer_sig_cancer_filtered$patient, "_", results_cancer_sig_cancer_filtered$disease) %in% patients_fig2$V1),]
#remove patients with < 30 cells
#patients_keep <- names(which(table(results_cancer_sig_cancer_filtered$patient) >30))
#results_cancer_sig_cancer_filtered <- results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$patient %in% patients_keep),]
results_cancer_sig_cancer_filtered[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_cancer_filtered)),"patient"] <- paste0(unfiltered_mat[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_cancer_filtered)),"patient"], "_",unfiltered_mat[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_cancer_filtered)),"sampling_site"] )
results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$patient == "NBM_244"),"patient"] <- "NBM_244_unclear"
results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$dataset == "Dong_et_al_nbm"),"patient"] <- paste0(results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$dataset == "Dong_et_al_nbm"),"patient"],"_",
results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$dataset == "Dong_et_al_nbm"),"sampling_site"] )
results_cancer_sig_cancer_filtered$patient <- gsub("_Neuroblastoma_Neuroblastoma", "_Neuroblastoma", results_cancer_sig_cancer_filtered$patient)
results_cancer_sig_cancer_filtered$patient <- gsub(" ", "_", results_cancer_sig_cancer_filtered$patient)
patients_final <- levels(as.factor(paste0(primary_matrix$patient,"_", primary_matrix$sampling_site)))
patients_now <- levels(as.factor(results_cancer_sig_cancer_filtered$patient))
results_cancer_sig_cancer_filtered <- results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$patient %in% patients_final),]
#pan cancer cluster cancer
length(levels(as.factor(results_cancer_sig_cancer_filtered$patient)))
results_cancer_sig_scATOMIC_cancer <- results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$pan_cancer_cluster == "Cancer"), ]
index_discordant <- row.names(results_cancer_sig_scATOMIC_cancer)[which(results_cancer_sig_scATOMIC_cancer$CNV_status %in% c("diploid"))]
results_cancer_sig_scATOMIC_cancer[index_discordant, "CNV_status"] <- "discordant"
results_cancer_sig_scATOMIC_cancer_cells_CS <- results_cancer_sig_scATOMIC_cancer[,c( "pan_cancer_cluster", "patient", "disease")]
results_cancer_sig_scATOMIC_cancer_cells_CS_counts <- plyr::ddply(results_cancer_sig_scATOMIC_cancer_cells_CS, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_scATOMIC_cancer_cells_CS_counts)[4] <- "Freq"
results_cancer_sig_scATOMIC_cancer_cells_CS_counts$mode = "Cancer_Sig"
results_cancer_sig_scATOMIC_cancer_cells_CNV <- results_cancer_sig_scATOMIC_cancer[,c( "CNV_status", "patient","disease")]
colnames(results_cancer_sig_scATOMIC_cancer_cells_CNV)[1] <- "pan_cancer_cluster"
results_cancer_sig_scATOMIC_cancer_cells_CNV_counts <- plyr::ddply(results_cancer_sig_scATOMIC_cancer_cells_CNV, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_scATOMIC_cancer_cells_CNV_counts)[4] <- "Freq"
results_cancer_sig_scATOMIC_cancer_cells_CNV_counts$mode = "CNV"
results_cancer_sig_scATOMIC_cancer_cells_bar <- rbind(results_cancer_sig_scATOMIC_cancer_cells_CS_counts, results_cancer_sig_scATOMIC_cancer_cells_CNV_counts)
results_cancer_sig_scATOMIC_cancer_cells_bar <- results_cancer_sig_scATOMIC_cancer_cells_bar[order(results_cancer_sig_scATOMIC_cancer_cells_bar$patient), ]
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- results_cancer_sig_scATOMIC_cancer_cells_bar
#####
results_cancer_sig_diploid_filtered <- results_cancer_sig[which( (results_cancer_sig$CNV_status %in% "diploid" & results_cancer_sig$layer_6 %in% c(cancer_classes))|
(is.na(results_cancer_sig$CNV_status) & results_cancer_sig$pan_cancer_cluster == "Normal"  &
results_cancer_sig$layer_6 %in% c(cancer_classes)) ) ,]
results_cancer_sig_diploid_filtered$CNV_status = "diploid"
primary_datasets <- intersect(levels(as.factor(results_cancer_sig_diploid_filtered$patient)),levels(as.factor(primary_matrix$patient)))
results_cancer_sig_diploid_filtered <- results_cancer_sig_diploid_filtered[which(results_cancer_sig_diploid_filtered$patient %in%primary_datasets),]
patients_fig2 <- fread("~/Downloads/patients_use.txt", header = F, sep = "")
results_cancer_sig_diploid_filtered <- results_cancer_sig_diploid_filtered[which(paste0(results_cancer_sig_diploid_filtered$patient, "_", results_cancer_sig_diploid_filtered$disease) %in% patients_fig2$V1),]
#remove patients with < 30 cells
results_cancer_sig_diploid_filtered[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_diploid_filtered)),"patient"] <- paste0(unfiltered_mat[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_diploid_filtered)),"patient"], "_",unfiltered_mat[intersect(row.names(unfiltered_mat),
row.names(results_cancer_sig_diploid_filtered)),"sampling_site"] )
results_cancer_sig_diploid_filtered[which(results_cancer_sig_diploid_filtered$patient == "NBM_244"),"patient"] <- "NBM_244_unclear"
results_cancer_sig_diploid_filtered[which(results_cancer_sig_diploid_filtered$dataset == "Dong_et_al_nbm"),"patient"] <- paste0(results_cancer_sig_diploid_filtered[which(results_cancer_sig_diploid_filtered$dataset == "Dong_et_al_nbm"),"patient"],"_",
results_cancer_sig_diploid_filtered[which(results_cancer_sig_diploid_filtered$dataset == "Dong_et_al_nbm"),"sampling_site"] )
results_cancer_sig_diploid_filtered$patient <- gsub("_Neuroblastoma_Neuroblastoma", "_Neuroblastoma", results_cancer_sig_diploid_filtered$patient)
results_cancer_sig_diploid_filtered$patient <- gsub(" ", "_", results_cancer_sig_diploid_filtered$patient)
patients_final <- levels(as.factor(paste0(primary_matrix$patient,"_", primary_matrix$sampling_site)))
patients_now <- levels(as.factor(results_cancer_sig_diploid_filtered$patient))
results_cancer_sig_diploid_filtered <- results_cancer_sig_diploid_filtered[which(results_cancer_sig_diploid_filtered$patient %in% patients_final),]
#pan cancer cluster cancer
length(levels(as.factor(results_cancer_sig_diploid_filtered$patient)))
results_cancer_sig_diploid_filtered_cells_CS <- results_cancer_sig_diploid_filtered[,c( "pan_cancer_cluster", "patient", "disease")]
results_cancer_sig_diploid_filtered_cells_CS_counts <- plyr::ddply(results_cancer_sig_diploid_filtered_cells_CS, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_diploid_filtered_cells_CS_counts)[4] <- "Freq"
results_cancer_sig_diploid_filtered_cells_CS_counts$mode = "Cancer_Sig"
results_cancer_sig_diploid_filtered_cells_CNV <- results_cancer_sig_diploid_filtered[,c( "CNV_status", "patient","disease")]
colnames(results_cancer_sig_diploid_filtered_cells_CNV)[1] <- "pan_cancer_cluster"
results_cancer_sig_diploid_filtered_cells_CNV_counts <- plyr::ddply(results_cancer_sig_diploid_filtered_cells_CNV, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_diploid_filtered_cells_CNV_counts)[4] <- "Freq"
results_cancer_sig_diploid_filtered_cells_CNV_counts$mode = "CNV"
results_cancer_sig_diploid_filtered_cells_bar <- rbind(results_cancer_sig_diploid_filtered_cells_CS_counts, results_cancer_sig_diploid_filtered_cells_CNV_counts)
results_cancer_sig_diploid_filtered_cells_bar <- results_cancer_sig_diploid_filtered_cells_bar[order(results_cancer_sig_diploid_filtered_cells_bar$patient), ]
results_cancer_sig_diploid_filtered_cells_bar_fil <- results_cancer_sig_diploid_filtered_cells_bar
#pan cancer cluster cancer
results_cancer_sig_scATOMIC_normal <- results_cancer_sig_cancer_filtered[which(results_cancer_sig_cancer_filtered$pan_cancer_cluster == "Normal"), ]
index_discordant <- row.names(results_cancer_sig_scATOMIC_normal)[which(results_cancer_sig_scATOMIC_normal$CNV_status %in% c("aneuploid"))]
results_cancer_sig_scATOMIC_normal[index_discordant, "CNV_status"] <- "discordant"
results_cancer_sig_scATOMIC_normal_cells_CS <- results_cancer_sig_scATOMIC_normal[,c( "pan_cancer_cluster", "patient", "disease")]
results_cancer_sig_scATOMIC_normal_cells_CS_counts <- plyr::ddply(results_cancer_sig_scATOMIC_normal_cells_CS, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_scATOMIC_normal_cells_CS_counts)[4] <- "Freq"
results_cancer_sig_scATOMIC_normal_cells_CS_counts$mode = "Cancer_Sig"
results_cancer_sig_scATOMIC_normal_cells_CNV <- results_cancer_sig_scATOMIC_normal[,c( "CNV_status", "patient","disease")]
colnames(results_cancer_sig_scATOMIC_normal_cells_CNV)[1] <- "pan_cancer_cluster"
results_cancer_sig_scATOMIC_normal_cells_CNV_counts <- plyr::ddply(results_cancer_sig_scATOMIC_normal_cells_CNV, .variables = c( "pan_cancer_cluster", "patient","disease"), nrow)
colnames(results_cancer_sig_scATOMIC_normal_cells_CNV_counts)[4] <- "Freq"
results_cancer_sig_scATOMIC_normal_cells_CNV_counts$mode = "CNV"
results_cancer_sig_scATOMIC_normal_cells_bar <- rbind(results_cancer_sig_scATOMIC_normal_cells_CS_counts, results_cancer_sig_scATOMIC_normal_cells_CNV_counts)
results_cancer_sig_scATOMIC_normal_cells_bar <- results_cancer_sig_scATOMIC_normal_cells_bar[order(results_cancer_sig_scATOMIC_normal_cells_bar$patient), ]
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- results_cancer_sig_scATOMIC_normal_cells_bar
#plot cancer
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$mode == "Cancer_Sig"),]
results_cancer_sig_aneuploid_filtered_cells_bar_fil <- results_cancer_sig_aneuploid_filtered_cells_bar_fil[which(results_cancer_sig_aneuploid_filtered_cells_bar_fil$mode == "CNV"),]
results_cancer_sig_aneuploid_filtered_cells_bar_fil$mode <- "copyKat_aneuploid"
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_cancer_cells_bar_fil, results_cancer_sig_aneuploid_filtered_cells_bar_fil)
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$mode == "Cancer_Sig"),]
results_cancer_sig_diploid_filtered_cells_bar_fil <- results_cancer_sig_diploid_filtered_cells_bar_fil[which(results_cancer_sig_diploid_filtered_cells_bar_fil$mode == "CNV"),]
results_cancer_sig_diploid_filtered_cells_bar_fil$mode <- "copyKat_diploid"
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_normal_cells_bar_fil, results_cancer_sig_diploid_filtered_cells_bar_fil)
index_add <- outersect(paste0(results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient, "___", results_cancer_sig_scATOMIC_normal_cells_bar_fil$disease),
paste0(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient, "___", results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease))
index_add <- index_add[which(index_add %in% intersect(index_add, paste0(results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient, "___", results_cancer_sig_scATOMIC_normal_cells_bar_fil$disease)))]
if(length(index_add > 0)){
for(i in 1:length(index_add)){
to_add <- strsplit(index_add[i],split = "___")
mat_to_add <- as.data.frame(cbind(to_add[[1]][1],to_add[[1]][2],to_add[[1]][3] ))
colnames(mat_to_add) <- c("pan_cancer_cluster", "patient","disease")
mat_to_add$Freq <- 0
mat_to_add$mode <- "temp"
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_cancer_cells_bar_fil, mat_to_add)
}
}
results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$pan_cancer_cluster %in% c("Cancer")),"mode"] <- "scATOMIC_cancer"
results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$pan_cancer_cluster %in% c("aneuploid", NA, "NA")),"mode"] <- "copyKat_aneuploid"
results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$pan_cancer_cluster %in% c( "diploid", "discordant")),"mode"] <- "copyKat_discordant"
results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$pan_cancer_cluster %in% c("Normal")),"mode"] <- "scATOMIC_Normal"
patients <- levels(as.factor(paste0(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient, "___",results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease )))
for(i in 1:length(patients)){
patient_used <- strsplit(patients[i], "___")[[1]][1]
disease_used <- strsplit(patients[i], "___")[[1]][2]
temp_mat <- results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient == patient_used &
results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease == disease_used),]
if(length(grep("Cancer", temp_mat$pan_cancer_cluster)) < 1){
mat_to_add <- as.data.frame(cbind("Cancer", patient_used, disease_used, 0, "scATOMIC_cancer"))
colnames(mat_to_add) <- c("pan_cancer_cluster", "patient",  "disease", "Freq","mode")
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_cancer_cells_bar_fil, mat_to_add)
print(patients[i])
print(i)
}
if(length(grep("aneuploid", temp_mat$pan_cancer_cluster)) < 1){
mat_to_add <- as.data.frame(cbind("aneuploid", patient_used, disease_used, 0, "copyKat_aneuploid"))
colnames(mat_to_add) <- c("pan_cancer_cluster", "patient",  "disease", "Freq","mode")
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_cancer_cells_bar_fil, mat_to_add)
print(patients[i])
print(i)
}
if(length(grep("discordant", temp_mat$pan_cancer_cluster)) < 1){
mat_to_add <- as.data.frame(cbind("discordant", patient_used, disease_used, 0, "copyKat_discordant"))
colnames(mat_to_add) <- c("pan_cancer_cluster", "patient",  "disease", "Freq","mode")
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_cancer_cells_bar_fil, mat_to_add)
print(patients[i])
print(i)
}
}
results_cancer_sig_scATOMIC_cancer_cells_bar_fil <- results_cancer_sig_scATOMIC_cancer_cells_bar_fil[order(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient), ]
results_cancer_sig_scATOMIC_cancer_cells_bar_fil$Freq = as.numeric(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$Freq)
index_add <- outersect(paste0(results_cancer_sig_scATOMIC_normal_cells_bar$patient, "___", results_cancer_sig_scATOMIC_normal_cells_bar$disease),
paste0(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient, "___", results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease))
index_add <- index_add[which(index_add %in% intersect(index_add, paste0(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient, "___", results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease)))]
for(i in 1:length(index_add)){
to_add <- strsplit(index_add[i],split = "___")
mat_to_add <- as.data.frame(cbind(to_add[[1]][1],to_add[[1]][2] ))
colnames(mat_to_add) <- c("patient","disease")
mat_to_add <- rbind(mat_to_add,mat_to_add,mat_to_add )
mat_to_add$Freq <- 0
mat_to_add$pan_cancer_cluster <- "temp"
mat_to_add$mode <- c("copyKat_diploid", "copyKat_discordant", "scATOMIC_Normal")
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_normal_cells_bar_fil, mat_to_add)
}
results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$pan_cancer_cluster %in% c("Normal")),"mode"] <- "scATOMIC_Normal"
results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$pan_cancer_cluster %in% c("diploid")),"mode"] <- "copyKat_diploid"
results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$pan_cancer_cluster %in% c( "aneuploid", "discordant")),"mode"] <- "copyKat_discordant"
patients <- levels(as.factor(paste0(results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient, "___",results_cancer_sig_scATOMIC_normal_cells_bar_fil$disease )))
for(i in 1:length(patients)){
patient_used <- strsplit(patients[i], "___")[[1]][1]
disease_used <- strsplit(patients[i], "___")[[1]][2]
temp_mat <- results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient == patient_used &
results_cancer_sig_scATOMIC_normal_cells_bar_fil$disease == disease_used),]
if(length(grep("Normal", temp_mat$pan_cancer_cluster)) < 1){
mat_to_add <- as.data.frame(cbind("Normal", patient_used, disease_used, 0, "scATOMIC_Normal"))
colnames(mat_to_add) <- c("pan_cancer_cluster", "patient",  "disease", "Freq","mode")
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_normal_cells_bar_fil, mat_to_add)
print(patients[i])
print(i)
}
if(length(grep("diploid", temp_mat$pan_cancer_cluster)) < 1){
mat_to_add <- as.data.frame(cbind("diploid", patient_used, disease_used, 0, "copyKat_diploid"))
colnames(mat_to_add) <- c("pan_cancer_cluster", "patient",  "disease", "Freq","mode")
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_normal_cells_bar_fil, mat_to_add)
print(patients[i])
print(i)
}
if(length(grep("discordant", temp_mat$pan_cancer_cluster)) < 1){
mat_to_add <- as.data.frame(cbind("discordant", patient_used, disease_used, 0, "copyKat_discordant"))
colnames(mat_to_add) <- c("pan_cancer_cluster", "patient",  "disease", "Freq","mode")
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- rbind(results_cancer_sig_scATOMIC_normal_cells_bar_fil, mat_to_add)
print(patients[i])
print(i)
}
}
results_cancer_sig_scATOMIC_normal_cells_bar_fil <- results_cancer_sig_scATOMIC_normal_cells_bar_fil[order(results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient), ]
results_cancer_sig_scATOMIC_normal_cells_bar_fil$Freq = as.numeric(results_cancer_sig_scATOMIC_normal_cells_bar_fil$Freq)
diseases <- levels(as.factor(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease))
for(i in 1:length(diseases)){
disease_used <- diseases[i]
fac_order_mat <- results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease == disease_used & results_cancer_sig_scATOMIC_cancer_cells_bar_fil$mode == "scATOMIC_cancer"),]
fac_order <- fac_order_mat$patient[order(fac_order_mat$Freq, decreasing=F)]
patients_per_disease <- fac_order
for(m in 1:length(patients_per_disease)){
results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$disease == disease_used &
results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient == patients_per_disease[m]), "patient"] <- as.numeric(m)
results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$disease == disease_used &
results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient == patients_per_disease[m]), "patient"] <- as.numeric(m)
}
}
results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient <- as.numeric(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient)
results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient <- factor(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$patient)
p1 <- ggplot(results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$mode != "copyKat_discordant"),], aes(x = patient, y = Freq, color = mode))+
geom_point(position=position_jitter(h=0.02,w=0.02),size = 0.5)+
geom_line(aes(group = mode), size = 0.25)+
facet_wrap(~ disease, scales = "free")+
ylab("Number of Cells")+
xlab("Patient ID")+
scale_color_manual(values = c("copyKat_aneuploid" = "#E31A1C", "copyKat_discordant" = "#EBCC2A", "scATOMIC_cancer" = "#1F78B4"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, size = 5),
axis.text.y = element_text(size = 8),strip.text = element_text(size = 12)) +
NoLegend()
#p1
#ggsave("~/Desktop/images_for_paper_figures/lines_cancer_sig_fig/all_aneuploid_including_blood_line_plots_cancer_reg_txt.png",p1, width = 200, height = 125, units = "mm", dpi = 1000)
#ggsave("~/Downloads/cancer_cells.png",p1, width = 200, height = 125, units = "mm", dpi = 1000)
results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient <- as.numeric(results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient)
results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient <- factor(results_cancer_sig_scATOMIC_normal_cells_bar_fil$patient)
p1 <- ggplot(results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$mode != "copyKat_discordant"),], aes(x = patient, y = Freq, color = mode))+
geom_point(position=position_jitter(h=0.02,w=0.02),size = 0.5)+
geom_line(aes(group = mode), size = 0.25)+
facet_wrap(~ disease, scales = "free")+
ylab("Number of Cells")+
xlab("Patient ID")+
scale_color_manual(values = c("copyKat_diploid" = "#E31A1C", "copyKat_discordant" = "#EBCC2A", "scATOMIC_Normal" = "#1F78B4"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, size = 5),
axis.text.y = element_text(size = 8),strip.text = element_text(size = 12)) +
NoLegend()
#p1
#ggsave("~/Desktop/images_for_paper_figures/lines_cancer_sig_fig/all_aneuploid_including_blood_line_plots_cancer_reg_txt.png",p1, width = 200, height = 125, units = "mm", dpi = 1000)
#ggsave("~/Downloads/normal_cells.png",p1, width = 200, height = 125, units = "mm", dpi = 1000)
test_combo <- rbind(results_cancer_sig_scATOMIC_cancer_cells_bar_fil[which(results_cancer_sig_scATOMIC_cancer_cells_bar_fil$mode != "copyKat_discordant"),]
,results_cancer_sig_scATOMIC_normal_cells_bar_fil[which(results_cancer_sig_scATOMIC_normal_cells_bar_fil$mode != "copyKat_discordant"),])
test_combo$comparison <- "cancer"
test_combo[which(test_combo$mode %in% c("scATOMIC_Normal", "copyKat_diploid")), "comparison"] <- "normal"
test_combo$tool <- "scATOMIC"
test_combo[which(test_combo$mode %in% c("copyKat_aneuploid", "copyKat_diploid")), "tool"] <- "copyKat"
#add agreement value
patients_agree <- levels(as.factor(paste0(test_combo$disease,"_",test_combo$patient)))
for(i in 1:length(patients_agree)){
filtered_matrix <- test_combo[which(paste0(test_combo$disease,"_",test_combo$patient) == patients_agree[i]),]
filtered_matrix$value_for_agreement <- "Cancer"
filtered_matrix[which(filtered_matrix$pan_cancer_cluster == "aneuploid"), "value_for_agreement"] <- "Cancer"
filtered_matrix[which(filtered_matrix$pan_cancer_cluster == "Normal"), "value_for_agreement"] <- "Normal"
filtered_matrix[which(filtered_matrix$pan_cancer_cluster == "diploid"), "value_for_agreement"] <- "Normal"
filtered_matrix
agreement_value <- agree
}
p1 <- ggplot(test_combo, aes(x = patient, y = Freq, color = tool))+
geom_point(position=position_jitter(h=0.02,w=0.02),size = 0.5)+
geom_line(aes(group = mode, linetype = comparison), size = 0.5)+
facet_wrap(~ disease, scales = "free")+
ylab("Number of Cells")+
xlab("Patient ID")+
scale_color_manual(values = c("copyKat" = "#E31A1C","scATOMIC" = "#1F78B4"))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, size = 5),
axis.text.y = element_text(size = 8),strip.text = element_text(size = 12)) +
NoLegend()
p1
library(irr)
library(mltools)
library(DescTools)
patients <- levels(as.factor(results_cancer_sig_scATOMIC_cancer$patient))
kappa_values <- c()
p_values <- c()
n_cells <- c()
agreement_value <- c()
n_cancer <- c()
n_normal <- c()
n_aneuploid <- c()
n_diploid <- c()
disease <- c()
pct_NA <- c()
for(i in 1:length(patients)){
filtered_tab <- results_cancer_sig_scATOMIC_cancer[which(results_cancer_sig_scATOMIC_cancer$patient == patients[i]),]
filtered_tab <- filtered_tab[,c("pan_cancer_cluster", "CNV_status")]
filtered_tab[which(filtered_tab$CNV_status == "aneuploid"),"CNV_status"] <- "Cancer"
filtered_tab[which(filtered_tab$CNV_status == "discordant"),"CNV_status"] <- "Normal"
filtered_tab_2 <- results_cancer_sig_scATOMIC_normal[which(results_cancer_sig_scATOMIC_normal$patient == patients[i]),]
filtered_tab_2 <- filtered_tab_2[,c("pan_cancer_cluster", "CNV_status")]
filtered_tab_2[which(filtered_tab_2$CNV_status == "diploid"),"CNV_status"] <- "Normal"
filtered_tab_2[which(filtered_tab_2$CNV_status == "discordant"),"CNV_status"] <- "Cancer"
input_mat <- rbind(filtered_tab, filtered_tab_2)
pct_NA <- c(pct_NA,length(which(is.na(input_mat$CNV_status)))/nrow(input_mat) *100)
#filtered_tab[which(is.na(filtered_tab$CNV_status)),"CNV_status"] <- "Cancer"
#filtered_tab_2[which(is.na(filtered_tab_2$CNV_status)),"CNV_status"] <- "Normal"
#input_mat <- rbind(filtered_tab, filtered_tab_2)
test <- kappa2(input_mat)
agreement <- agree(input_mat)
agreement_value <- c(agreement_value, agreement$value)
kappa_values <- c(kappa_values, test$value)
p_values <- c(p_values, test$p.value)
n_cells <- as.numeric(c(n_cells, test$subjects))
n_cancer <- as.numeric(c(n_cancer, nrow(filtered_tab)))
n_normal <- as.numeric(c(n_normal, nrow(filtered_tab_2)))
n_aneuploid <- as.numeric(c(n_aneuploid,length(which(input_mat$CNV_status == "Cancer"))  ))
n_diploid <- as.numeric(c(n_diploid,length(which(input_mat$CNV_status == "Normal"))  ))
disease <- c(disease, results_cancer_sig_scATOMIC_cancer[which(results_cancer_sig_scATOMIC_cancer$patient == patients[i]),"disease"][1])
names(kappa_values)[length(kappa_values)] <- patients[i]
names(p_values)[length(p_values)] <- patients[i]
names(agreement_value)[length(agreement_value)] <- patients[i]
fish_mat <- matrix(c(n_cancer[i], n_cells[i], n_aneuploid[i],n_cells[i]), nrow = 2)
}
kappa_values[which(kappa_values == "NaN")] = 1
n_cancer_aneuploid <-c()
n_cancer_diploid <- c()
n_normal_aneuploid <- c()
n_normal_diploid <-c()
fisher_p <- c()
for(i in 1:length(patients)){
filtered_tab <- results_cancer_sig_scATOMIC_cancer[which(results_cancer_sig_scATOMIC_cancer$patient == patients[i]),]
filtered_tab <- filtered_tab[,c("pan_cancer_cluster", "CNV_status")]
filtered_tab[which(filtered_tab$CNV_status == "aneuploid"),"CNV_status"] <- "Cancer"
filtered_tab[which(filtered_tab$CNV_status == "discordant"),"CNV_status"] <- "Normal"
filtered_tab_2 <- results_cancer_sig_scATOMIC_normal[which(results_cancer_sig_scATOMIC_normal$patient == patients[i]),]
filtered_tab_2 <- filtered_tab_2[,c("pan_cancer_cluster", "CNV_status")]
filtered_tab_2[which(filtered_tab_2$CNV_status == "diploid"),"CNV_status"] <- "Normal"
filtered_tab_2[which(filtered_tab_2$CNV_status == "discordant"),"CNV_status"] <- "Cancer"
input_mat <- rbind(filtered_tab, filtered_tab_2)
input_mat <- na.omit(input_mat)
n_cancer_aneuploid <- c(n_cancer_aneuploid, length(which(input_mat$pan_cancer_cluster == "Cancer" & input_mat$CNV_status == "Cancer")))
n_cancer_diploid <- c(n_cancer_diploid,length(which(input_mat$pan_cancer_cluster == "Cancer" & input_mat$CNV_status == "Normal")))
n_normal_aneuploid <- c(n_normal_aneuploid,length(which(input_mat$pan_cancer_cluster == "Normal" & input_mat$CNV_status == "Cancer")))
n_normal_diploid <- c(n_normal_diploid,length(which(input_mat$pan_cancer_cluster == "Normal" & input_mat$CNV_status == "Normal")))
fish_mat <- matrix(c(n_cancer_aneuploid[i], n_cancer_diploid[i], n_normal_aneuploid[i],n_normal_diploid[i]), nrow = 2)
fisher.test(fish_mat)
}
df <- data.frame(kappa_values,n_cancer,n_normal, n_cells,n_aneuploid,n_diploid,agreement_value,disease,pct_NA,names(kappa_values))
diseases <- levels(as.factor(df$disease))
for(i in 1:length(diseases)){
disease_used <- diseases[i]
fac_order_mat <- df[which(df$disease == disease_used),]
fac_order <- fac_order_mat$patient[order(fac_order_mat$n_cancer, decreasing=F)]
patients_per_disease <- fac_order
for(m in 1:length(patients_per_disease)){
df[which(df$disease == disease_used &
df$patient == patients_per_disease[m]), "patient"] <- as.numeric(m)
}
}
df$patient <- as.numeric(df$patient)
df$patient <- factor(df$patient)
median(df$agreement_value)
mean(df$agreement_value)
length(which(df$n_cancer < df$n_aneuploid))
for(i in 1:nrow(df)){
}
p1 <- ggplot(df, aes(x = patient, y = agreement_value/100))+
geom_bar(stat = "identity", fill = "#117733")+
facet_wrap(~ disease, scales = "free")+
ylab("Agreement")+
xlab("Patient ID")+
scale_y_continuous(breaks = c(0,0.5,1),limits = c(0,1))+
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(angle = 90, vjust = 0.5, size = 5),
axis.text.y = element_text(size = 8),strip.text = element_text(size = 12)) +
NoLegend()
p1
View(df)
