cancer_classes <- c(cancer_classes,"Breast/Lung/Prostate", "Ovarian/Endometrial/Kidney", "Endometrial Cancer Cell",
"Biliary/Hepatic Cancer Cell", "Brain/Neuroblastoma Cancer Cell", "Digestive Tract Cancer Cell",
"Soft Tissue Cancer Cell", "Soft Tissue or Neuro Cancer Cell", "Unclassified Soft Tissue or Neuro Cancer Cell","ER+ Breast Cancer Cell",
"HER2+ Breast Cancer Cell","Her2+ Breast Cancer Cell","TNBC Breast Cancer Cell")
predicted_cancer <- seurat_object@meta.data[which(seurat_object@meta.data$layer_6 %in% cancer_classes),]
if(nrow(predicted_cancer) > 0){
frequency <- as.data.frame(table(predicted_cancer$scATOMIC_pred), stringsAsFactors = F)
if(breast_mode == T){
frequency <- as.data.frame(table(predicted_cancer$layer_5), stringsAsFactors = F)
}
proportion <- frequency$Freq/sum(frequency$Freq)
frequency <- cbind(frequency, proportion)
max_proportion <- max(frequency$proportion)
major_cancer <- frequency[which(frequency$proportion == max_proportion), "Var1"]
#if there is more than 1 seurat cluster for cancer we want to split into normal and cancer
if(major_cancer == "Bile Duct Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "CHOL") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "CHOL")),"Gene"]
}else if(major_cancer == "Bladder Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "BLCA") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "BLCA")),"Gene"]
} else if(major_cancer == "Bone Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "SARC") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "SARC")),"Gene"]
} else if(major_cancer == "Brain Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "GBM", "LGG") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "GBM", "LGG")),"Gene"]
} else if(major_cancer %in% c( "Breast Cancer Cell","ER+ Breast Cancer Cell","HER2+ Breast Cancer Cell","TNBC Breast Cancer Cell","Her2+ Breast Cancer Cell"  ) ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "BRCA") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "BRCA")),"Gene"]
} else if(major_cancer == "Colon/Colorectal Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "COAD") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "COAD")),"Gene"]
} else if(major_cancer %in% c("Endometrial/Uterine Cancer Cell", "Endometrial Cancer Cell" )){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "UCS", "UCEC") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "UCS", "UCEC")),"Gene"]
} else if(major_cancer == "Gallbladder Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "CHOL") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "CHOL")),"Gene"]
} else if(major_cancer == "Kidney Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "KICH", "KIRC", "KIRP") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "KICH", "KIRC", "KIRP")),"Gene"]
} else if(major_cancer == "Liver Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "LIHC") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "LIHC")),"Gene"]
} else if(major_cancer == "Lung Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "LUAD") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "LUAD")),"Gene"]
} else if(major_cancer == "Ovarian Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "OV") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "OV")),"Gene"]
} else if(major_cancer == "Pancreatic Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "PAAD") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "PAAD")),"Gene"]
} else if(major_cancer == "Prostate Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "PRAD") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "PRAD")),"Gene"]
} else if(major_cancer == "Sarcoma" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "SARC") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "SARC")),"Gene"]
} else if(major_cancer == "Skin Cancer Cell" ){
cancer_specific_upreg <- upreg_list[which(upreg_list$cancer_type %in% c( "SKCM") ),"Gene"]
cancer_specific_downreg <- downreg_list[which(downreg_list$cancer_type %in% c( "SKCM")),"Gene"]
} else{
cancer_specific_upreg <- pan_cancer_upreg
cancer_specific_downreg <- pan_cancer_downreg
}
if(pan_cancer == T){
cancer_specific_upreg <- pan_cancer_upreg
cancer_specific_downreg <- pan_cancer_downreg
}
if(max_proportion < min_prop){
cancer_specific_upreg <- pan_cancer_upreg
cancer_specific_downreg <- pan_cancer_downreg
}
genes_upreg_shared <- intersect(row.names(raw_counts), cancer_specific_upreg)
genes_downreg_shared <- intersect(row.names(raw_counts), cancer_specific_downreg)
index_cancer <- row.names(predicted_cancer)
count_matrix_up_reg <- raw_counts[c(genes_upreg_shared),index_cancer]
frequency_per_row_nozero <- apply(count_matrix_up_reg,1,function(x){length(which(x!=0))})/ncol(count_matrix_up_reg)
genes_upreg_shared <- names(frequency_per_row_nozero)[which(frequency_per_row_nozero > 0)]
count_matrix_down_reg <- raw_counts[c(genes_downreg_shared),index_cancer]
frequency_per_row_nozero <- apply(count_matrix_down_reg,1,function(x){length(which(x!=0))})/ncol(count_matrix_down_reg)
genes_downreg_shared <- names(frequency_per_row_nozero)[which(frequency_per_row_nozero > 0)]
cancer_subset <- seurat_object
cancer_subset <- magic(cancer_subset)
#cancer_subset <- Seurat::AddModuleScore(cancer_subset, features = genes_upreg_shared, verbose = F, name = "upreg_genes", assay = "MAGIC_RNA")
#cancer_subset <- Seurat::AddModuleScore(cancer_subset, features = genes_downreg_shared, verbose = F, name = "downreg_genes", assay = "MAGIC_RNA")
cancer_subset <- Seurat::AddModuleScore(cancer_subset, features = list(upreg_genes = genes_upreg_shared, downreg_genes = genes_downreg_shared), verbose = F, name = c("upreg_genes", "downreg_genes"), assay = "MAGIC_RNA")
dist_cancer_signature <- amap::Dist(cancer_subset@meta.data[,c("upreg_genes1", "downreg_genes2")], method = "euclidean", nbproc = mc.cores) # distance matrix
fit_clusters <- hclust(dist_cancer_signature, method="ward.D2")
groups <- cutree(fit_clusters, k=2)
cancer_subset <- AddMetaData(cancer_subset, groups, "pan_cancer_cluster")
index_normal <- unique(c(row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$upreg_genes1 <
cancer_subset@meta.data$downreg_genes2)],
row.names(cancer_subset@meta.data)[-which(cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes)]))
index_non_normal <- outersect(row.names(cancer_subset@meta.data), index_normal)
pct_normal_cluster_1 <- length(intersect(index_normal, row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == 1)]))/length(which(cancer_subset@meta.data$pan_cancer_cluster == 1))
pct_normal_cluster_2 <- length(intersect(index_normal, row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == 2)]))/length(which(cancer_subset@meta.data$pan_cancer_cluster == 2))
DimPlot(cancer_subset, group.by = "pan_cancer_cluster")
DimPlot(cancer_subset, group.by = "scATOMIC_pred", label = T) + NoLegend()
DimPlot(cancer_subset, cells.highlight =  index_normal)
if (max(c(pct_normal_cluster_1,pct_normal_cluster_2)) - min(c(pct_normal_cluster_1,pct_normal_cluster_2)) < 0.1){
clust_1_cancer <- length(which(cancer_subset@meta.data$pan_cancer_cluster == 1 &
cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes ))/nrow(cancer_subset@meta.data)
clust_2_cancer <- length(which(cancer_subset@meta.data$pan_cancer_cluster == 2 &
cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes ))/nrow(cancer_subset@meta.data)
if(clust_1_cancer > clust_2_cancer){
cancer_clust = "1"
} else{
cancer_clust = "2"
}
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust |cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes )]
} else if(pct_normal_cluster_1 > pct_normal_cluster_2){
cancer_clust = "2"
if(max(c(pct_normal_cluster_1,pct_normal_cluster_2)) < 0.5){
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust |(cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes & row.names(cancer_subset@meta.data) %in% index_non_normal) )]
} else{
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust)]
}
} else if (pct_normal_cluster_1 < pct_normal_cluster_2){
cancer_clust = "1"
if(max(c(pct_normal_cluster_1,pct_normal_cluster_2)) < 0.5){
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust |(cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes & row.names(cancer_subset@meta.data) %in% index_non_normal) )]
} else{
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust)]
}
}
continue = TRUE
if(length(index_cancer) < 20){
continue = FALSE
}
if(pct_normal_cluster_1 != pct_normal_cluster_2){
if(min(c(pct_normal_cluster_1,pct_normal_cluster_2)) > 0 & max(pct_normal_cluster_1,pct_normal_cluster_2) > 0.5){
while(continue == TRUE){
index_cancer_last <- index_cancer
cancer_subset <- subset(seurat_object, cells = index_cancer)
cancer_subset <- Seurat::NormalizeData(cancer_subset, verbose = F)
cancer_subset <- Seurat::ScaleData(cancer_subset, verbose = F)
cancer_subset <- magic(cancer_subset)
cancer_subset <- Seurat::AddModuleScore(cancer_subset, features = list(upreg_genes = genes_upreg_shared, downreg_genes = genes_downreg_shared), verbose = F, name = c("upreg_genes", "downreg_genes"), assay = "MAGIC_RNA")
dist_cancer_signature <- amap::Dist(cancer_subset@meta.data[,c("upreg_genes1", "downreg_genes2")], method = "euclidean", nbproc = mc.cores) # distance matrix
#hierarcherical clustering based on these scores
fit_clusters <- hclust(dist_cancer_signature, method="ward.D2")
groups <- cutree(fit_clusters, k=2)
cancer_subset <- AddMetaData(cancer_subset, groups, "pan_cancer_cluster")
DimPlot(cancer_subset,group.by = "pan_cancer_cluster" )
index_normal <- unique(c(row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$upreg_genes1 <
cancer_subset@meta.data$downreg_genes2)],
row.names(cancer_subset@meta.data)[-which(cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes)]))
index_non_normal <- outersect(row.names(cancer_subset@meta.data), index_normal)
DimPlot(cancer_subset, cells.highlight =  index_normal)
pct_normal_cluster_1 <- length(intersect(index_normal, row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == 1)]))/length(which(cancer_subset@meta.data$pan_cancer_cluster == 1))
pct_normal_cluster_2 <- length(intersect(index_normal, row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == 2)]))/length(which(cancer_subset@meta.data$pan_cancer_cluster == 2))
if(max(pct_normal_cluster_1,pct_normal_cluster_2) > 0.2){
continue <- TRUE
} else{
continue <- FALSE
}
if (max(c(pct_normal_cluster_1,pct_normal_cluster_2)) - min(c(pct_normal_cluster_1,pct_normal_cluster_2)) < 0.25){
clust_1_cancer <- length(which(cancer_subset@meta.data$pan_cancer_cluster == 1 &
cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes ))/nrow(cancer_subset@meta.data)
clust_2_cancer <- length(which(cancer_subset@meta.data$pan_cancer_cluster == 2 &
cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes ))/nrow(cancer_subset@meta.data)
if(clust_1_cancer > clust_2_cancer){
cancer_clust = "1"
} else{
cancer_clust = "2"
}
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust |cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes & row.names(cancer_subset@meta.data) %in% index_non_normal)]
} else if (max(c(pct_normal_cluster_1,pct_normal_cluster_2)) < 0.9 ){
if(pct_normal_cluster_1 > pct_normal_cluster_2){
cancer_clust = "2"
} else{
cancer_clust = "1"
}
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust |cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes & row.names(cancer_subset@meta.data) %in% index_non_normal)]
}else if(pct_normal_cluster_1 > pct_normal_cluster_2){
cancer_clust = "2"
if(max(c(pct_normal_cluster_1,pct_normal_cluster_2)) < 0.5 ){
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust |(cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes & row.names(cancer_subset@meta.data) %in% index_non_normal) )]
continue <- TRUE
} else{
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust)]
}
} else if (pct_normal_cluster_1 < pct_normal_cluster_2){
cancer_clust = "1"
if( max(c(pct_normal_cluster_1,pct_normal_cluster_2)) < 0.5 ){
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust |(cancer_subset@meta.data$scATOMIC_pred %in% cancer_classes & row.names(cancer_subset@meta.data) %in% index_non_normal) )]
continue <- TRUE
} else{
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$pan_cancer_cluster == cancer_clust)]
}
}
if(length(index_cancer_last) == length(index_cancer)){
if(length(levels(as.factor(index_cancer_last == index_cancer)) == TRUE) == 1){
if (levels(as.factor(index_cancer_last == index_cancer)) == TRUE){
continue = FALSE
}
}
}
if(continue == FALSE){
index_cancer <- row.names(cancer_subset@meta.data)[which(cancer_subset@meta.data$upreg_genes1 >  cancer_subset@meta.data$downreg_genes2 )]
}
if(length(index_cancer) < 20){
continue = FALSE
}
}
index_normal <- outersect(row.names(seurat_object@meta.data)[which(seurat_object@meta.data$scATOMIC_pred %in% cancer_classes)],
index_cancer)
seurat_object@meta.data[index_normal,"scATOMIC_pred"] <- "Normal Tissue Cell"
predicted_cancer_new <- seurat_object@meta.data[which(seurat_object@meta.data$scATOMIC_pred %in%c(cancer_classes,"Breast/Lung/Prostate", "Ovarian/Endometrial/Kidney", "Endometrial Cancer Cell",
"Biliary/Hepatic Cancer Cell", "Brain/Neuroblastoma Cancer Cell", "Digestive Tract Cancer Cell",
"Soft Tissue Cancer Cell", "Soft Tissue or Neuro Cancer Cell", "Unclassified Soft Tissue or Neuro Cancer Cell","ER+ Breast Cancer Cell",
"HER2+ Breast Cancer Cell","TNBC Breast Cancer Cell", "Her2+ Breast Cancer Cell")),]
if(breast_mode == F){
frequency <- as.data.frame(table(predicted_cancer_new$scATOMIC_pred), stringsAsFactors = F)
proportion <- frequency$Freq/sum(frequency$Freq)
frequency <- cbind(frequency, proportion)
max_proportion <- max(frequency$proportion)
major_cancer <- frequency[which(frequency$proportion == max_proportion), "Var1"]
seurat_object@meta.data[row.names(predicted_cancer_new),"scATOMIC_pred"] <- major_cancer
seurat_object@meta.data[,"pan_cancer_cluster"] <- "Normal"
seurat_object@meta.data[row.names(predicted_cancer_new),"pan_cancer_cluster"] <- "Cancer"
} else{
frequency <- as.data.frame(table(predicted_cancer_new$layer_5), stringsAsFactors = F)
proportion <- frequency$Freq/sum(frequency$Freq)
frequency <- cbind(frequency, proportion)
max_proportion <- max(frequency$proportion)
major_cancer <- frequency[which(frequency$proportion == max_proportion), "Var1"]
index_non_breast <- row.names(predicted_cancer_new)[-which(predicted_cancer_new$scATOMIC_pred %in% c("ER+ Breast Cancer Cell",
"HER2+ Breast Cancer Cell","TNBC Breast Cancer Cell",
"Her2+ Breast Cancer Cell", "Breast Cancer Cell") )]
seurat_object@meta.data[index_non_breast,"scATOMIC_pred"] <- major_cancer
seurat_object@meta.data[,"pan_cancer_cluster"] <- "Normal"
seurat_object@meta.data[row.names(predicted_cancer_new),"pan_cancer_cluster"] <- "Cancer"
}
}
else{
index_cancer <- intersect(index_cancer, outersect(index_cancer, row.names(seurat_object@meta.data)[-which(seurat_object@meta.data$scATOMIC_pred %in% cancer_classes)]))
index_normal <- outersect(row.names(seurat_object@meta.data)[which(seurat_object@meta.data$scATOMIC_pred %in% cancer_classes)],
index_cancer)
seurat_object@meta.data[index_normal,"scATOMIC_pred"] <- "Normal Tissue Cell"
predicted_cancer_new <- seurat_object@meta.data[which(seurat_object@meta.data$scATOMIC_pred %in%c(cancer_classes,"Breast/Lung/Prostate", "Ovarian/Endometrial/Kidney", "Endometrial Cancer Cell",
"Biliary/Hepatic Cancer Cell", "Brain/Neuroblastoma Cancer Cell", "Digestive Tract Cancer Cell",
"Soft Tissue Cancer Cell", "Soft Tissue or Neuro Cancer Cell", "Unclassified Soft Tissue or Neuro Cancer Cell","ER+ Breast Cancer Cell",
"HER2+ Breast Cancer Cell","TNBC Breast Cancer Cell", "Her2+ Breast Cancer Cell")),]
if(breast_mode == F){
frequency <- as.data.frame(table(predicted_cancer_new$scATOMIC_pred), stringsAsFactors = F)
proportion <- frequency$Freq/sum(frequency$Freq)
frequency <- cbind(frequency, proportion)
max_proportion <- max(frequency$proportion)
major_cancer <- frequency[which(frequency$proportion == max_proportion), "Var1"]
seurat_object@meta.data[row.names(predicted_cancer_new),"scATOMIC_pred"] <- major_cancer
seurat_object@meta.data[,"pan_cancer_cluster"] <- "Normal"
seurat_object@meta.data[row.names(predicted_cancer_new),"pan_cancer_cluster"] <- "Cancer"
} else{
frequency <- as.data.frame(table(predicted_cancer_new$layer_5), stringsAsFactors = F)
proportion <- frequency$Freq/sum(frequency$Freq)
frequency <- cbind(frequency, proportion)
max_proportion <- max(frequency$proportion)
major_cancer <- frequency[which(frequency$proportion == max_proportion), "Var1"]
index_non_breast <- row.names(predicted_cancer_new)[-which(predicted_cancer_new$scATOMIC_pred %in% c("ER+ Breast Cancer Cell",
"HER2+ Breast Cancer Cell","TNBC Breast Cancer Cell",
"Her2+ Breast Cancer Cell", "Breast Cancer Cell") )]
seurat_object@meta.data[index_non_breast,"scATOMIC_pred"] <- major_cancer
seurat_object@meta.data[,"pan_cancer_cluster"] <- "Normal"
seurat_object@meta.data[row.names(predicted_cancer_new),"pan_cancer_cluster"] <- "Cancer"
}
}
} else{
index_cancer <- intersect(index_cancer, outersect(index_cancer, row.names(seurat_object@meta.data)[-which(seurat_object@meta.data$scATOMIC_pred %in% cancer_classes)]))
index_normal <- outersect(row.names(seurat_object@meta.data)[which(seurat_object@meta.data$scATOMIC_pred %in% cancer_classes)],
index_cancer)
predicted_cancer_new <- seurat_object@meta.data[which(seurat_object@meta.data$scATOMIC_pred %in%c(cancer_classes,"Breast/Lung/Prostate", "Ovarian/Endometrial/Kidney", "Endometrial Cancer Cell",
"Biliary/Hepatic Cancer Cell", "Brain/Neuroblastoma Cancer Cell", "Digestive Tract Cancer Cell",
"Soft Tissue Cancer Cell", "Soft Tissue or Neuro Cancer Cell", "Unclassified Soft Tissue or Neuro Cancer Cell","ER+ Breast Cancer Cell",
"HER2+ Breast Cancer Cell","TNBC Breast Cancer Cell")),]
frequency <- as.data.frame(table(predicted_cancer_new$scATOMIC_pred), stringsAsFactors = F)
proportion <- frequency$Freq/sum(frequency$Freq)
frequency <- cbind(frequency, proportion)
max_proportion <- max(frequency$proportion)
major_cancer <- frequency[which(frequency$proportion == max_proportion), "Var1"]
seurat_object@meta.data[row.names(predicted_cancer_new),"scATOMIC_pred"] <- major_cancer
seurat_object@meta.data[,"pan_cancer_cluster"] <- "Normal"
seurat_object@meta.data[row.names(predicted_cancer_new),"pan_cancer_cluster"] <- "Cancer"
summary_master <- seurat_object@meta.data
}
summary_master <- seurat_object@meta.data
}
summary_master <- seurat_object@meta.data
}
return(summary_master)
}
}
test <- create_summary_matrix_new(raw_counts = patient_3586_matrix, prediction_list = cell_predictions)
table(test$scATOMIC_pred)
gc()
devtools::install_github("abelson-lab/scATOMIC")
library(scATOMIC)
library(plyr)
library(dplyr)
library(data.table)
library(randomForest)
library(caret)
library(parallel)
library(reticulate)
library(Rmagic)
library(Matrix)
library(Seurat)
library(agrmt)
library(cutoff)
library(copykat)
library(ggplot2
)
create_summary_matrix
test <- create_summary_matrix(raw_counts = patient_3586_matrix, prediction_list = cell_predictions)
load("~/Downloads/error.rdata")
test <- create_summary_matrix(raw_counts = patient_3586_matrix, prediction_list = cell_predictions)
table(test$scATOMIC_pred)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(scATOMIC)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
library(scATOMIC)
library(scATOMIC)
library(data.table)
list_markers <- list.files("~/Downloads/expression_full/", full.names = T)
markers_master <- data.frame()
for(i in 1:length(list_markers)){
markers_file <- data.table::fread(list_markers[i])
markers_file <- as.data.frame(markers_file)
cancer_type <- strsplit(list_markers[i], "diff_|.txt")[[1]][2]
markers_file$cancer_type <- cancer_type
markers_master <- rbind(markers_master, markers_file)
}
upreg_list <- markers_master[which(markers_master$`|log2FC|` > 1),]
downreg_list <- markers_master[which(markers_master$`|log2FC|` < -1),]
overlapping_genes <- intersect(upreg_list$Gene, downreg_list$Gene)
pan_cancer_upreg <- upreg_list[,"Gene"]
pan_cancer_upreg <- pan_cancer_upreg[-which(pan_cancer_upreg %in% overlapping_genes)]
pan_cancer_downreg <- downreg_list[,"Gene"]
pan_cancer_downreg <- pan_cancer_downreg[-which(pan_cancer_downreg %in% overlapping_genes)]
usethis::use_data(upreg_list, overwrite = TRUE)
usethis::use_data(downreg_list, overwrite = TRUE)
usethis::use_data(pan_cancer_upreg, overwrite = TRUE)
usethis::use_data(pan_cancer_downreg, overwrite = TRUE)
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_1.RData"))
top_genes_unlisted_layer_1 <- top_genes_unlisted
model_layer_1 <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_1, overwrite = TRUE)
usethis::use_data(model_layer_1, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_2_blood.RData"))
top_genes_unlisted_layer_2_blood <- top_genes_unlisted
model_layer_2_blood <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_2_blood, overwrite = TRUE)
usethis::use_data(model_layer_2_blood, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_2_non_blood.RData"))
top_genes_unlisted_layer_2_normal_tissue_cancer <- top_genes_unlisted
model_layer_2_normal_tissue_cancer <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_2_normal_tissue_cancer, overwrite = TRUE)
usethis::use_data(model_layer_2_normal_tissue_cancer, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_3_B_cell.RData"))
top_genes_unlisted_layer_3_BCell <- top_genes_unlisted
model_layer_3_BCell <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_3_BCell, overwrite = TRUE)
usethis::use_data(model_layer_3_BCell, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_3_myeloid.RData"))
top_genes_unlisted_layer_3_MDC <- top_genes_unlisted
model_layer_3_MDC <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_3_MDC, overwrite = TRUE)
usethis::use_data(model_layer_3_MDC, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_3_non_stromal <- scATOMIC::top_genes_unlisted_layer_3_non_stromal
model_layer_3_non_stromal <- scATOMIC::model_layer_3_non_stromal
usethis::use_data(top_genes_unlisted_layer_3_non_stromal, overwrite = TRUE)
usethis::use_data(model_layer_3_non_stromal, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_3_stromal.RData"))
top_genes_unlisted_layer_3_stromal <- top_genes_unlisted
model_layer_3_stromal <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_3_stromal, overwrite = TRUE)
usethis::use_data(model_layer_3_stromal, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_3_TNK.RData"))
top_genes_unlisted_layer_3_TNK <- top_genes_unlisted
model_layer_3_TNK <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_3_TNK, overwrite = TRUE)
usethis::use_data(model_layer_3_TNK, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_4_CD4_CD8.RData"))
top_genes_unlisted_layer_4_CD4_CD8 <- top_genes_unlisted
model_layer_4_CD4_CD8 <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_4_CD4_CD8, overwrite = TRUE)
usethis::use_data(model_layer_4_CD4_CD8, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_4_CD8_NK.RData"))
top_genes_unlisted_layer_4_CD8_NK <- top_genes_unlisted
model_layer_4_CD8_NK <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_4_CD8_NK, overwrite = TRUE)
usethis::use_data(model_layer_4_CD8_NK, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_4_dendritic_cell.RData"))
top_genes_unlisted_layer_4_DC_cell <- top_genes_unlisted
model_layer_4_DC_cell <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_4_DC_cell, overwrite = TRUE)
usethis::use_data(model_layer_4_DC_cell, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Documents/scATOMIC_revisions_with_PBMC/classifier_outputs_scATOMIC_revisions_with_PBMC_v2/", "Chen_et_al_33420488", "_heldout_layer_4_macrophage_monocyte.RData"))
top_genes_unlisted_layer_4_macrophage_monocyte <- top_genes_unlisted
model_layer_4_macrophage_monocyte <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_4_macrophage_monocyte, overwrite = TRUE)
usethis::use_data(model_layer_4_macrophage_monocyte, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_4_GI <- scATOMIC::top_genes_unlisted_layer_4_GI
model_layer_4_GI <- scATOMIC::model_layer_4_GI
usethis::use_data(top_genes_unlisted_layer_4_GI, overwrite = TRUE)
usethis::use_data(model_layer_4_GI, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_4_non_GI <- scATOMIC::top_genes_unlisted_layer_4_non_GI
model_layer_4_non_GI <- scATOMIC::model_layer_4_non_GI
usethis::use_data(top_genes_unlisted_layer_4_non_GI, overwrite = TRUE)
usethis::use_data(model_layer_4_non_GI, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_4_soft_neuro_cancer <- scATOMIC::top_genes_unlisted_layer_4_soft_neuro_cancer
model_layer_4_soft_neuro_cancer <- scATOMIC::model_layer_4_soft_neuro_cancer
usethis::use_data(top_genes_unlisted_layer_4_soft_neuro_cancer, overwrite = TRUE)
usethis::use_data(model_layer_4_soft_neuro_cancer, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_5_biliary <- scATOMIC::top_genes_unlisted_layer_5_biliary
model_layer_5_biliary <- scATOMIC::model_layer_5_biliary
usethis::use_data(top_genes_unlisted_layer_5_biliary, overwrite = TRUE)
usethis::use_data(model_layer_5_biliary, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_5_breast_lung_prostate <- scATOMIC::top_genes_unlisted_layer_5_breast_lung_prostate
model_layer_5_breast_lung_prostate <- scATOMIC::model_layer_5_breast_lung_prostate
usethis::use_data(top_genes_unlisted_layer_5_breast_lung_prostate, overwrite = TRUE)
usethis::use_data(model_layer_5_breast_lung_prostate, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_5_digestive <- scATOMIC::top_genes_unlisted_layer_5_digestive
model_layer_5_digestive <- scATOMIC::model_layer_5_digestive
usethis::use_data(top_genes_unlisted_layer_5_digestive, overwrite = TRUE)
usethis::use_data(model_layer_5_digestive, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_5_ov_endo_kid <- scATOMIC::top_genes_unlisted_layer_5_ov_endo_kid
model_layer_5_ov_endo_kid  <- scATOMIC::model_layer_5_ov_endo_kid
usethis::use_data(top_genes_unlisted_layer_5_ov_endo_kid, overwrite = TRUE)
usethis::use_data(model_layer_5_ov_endo_kid, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_5_soft_neuro_cancer_no_lung_skin <- scATOMIC::top_genes_unlisted_layer_5_soft_neuro_cancer_no_lung_skin
model_layer_5_soft_neuro_cancer_no_lung_skin <- scATOMIC::model_layer_5_soft_neuro_cancer_no_lung_skin
usethis::use_data(top_genes_unlisted_layer_5_soft_neuro_cancer_no_lung_skin, overwrite = TRUE)
usethis::use_data(model_layer_5_soft_neuro_cancer_no_lung_skin, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_6_brain_nbm <- scATOMIC::top_genes_unlisted_layer_6_brain_nbm
model_layer_6_brain_nbm <- scATOMIC::model_layer_6_brain_nbm
usethis::use_data(top_genes_unlisted_layer_6_brain_nbm, overwrite = TRUE)
usethis::use_data(model_layer_6_brain_nbm, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_6_soft_tissue <- scATOMIC::top_genes_unlisted_layer_6_soft_tissue
model_layer_6_soft_tissue <- scATOMIC::model_layer_6_soft_tissue
usethis::use_data(top_genes_unlisted_layer_6_soft_tissue, overwrite = TRUE)
usethis::use_data(model_layer_6_soft_tissue, overwrite = TRUE)
rm(list = ls())
top_genes_unlisted_layer_6_breast <- scATOMIC::top_genes_unlisted_layer_6_breast
model_layer_6_breast <- scATOMIC::model_layer_6_breast
usethis::use_data(top_genes_unlisted_layer_6_breast, overwrite = TRUE)
usethis::use_data(model_layer_6_breast, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Downloads/data_expression_T_cell_atlas/classifier_outputs_T_cells/classifier_layer_5_CD4_subtypes.RData"))
top_genes_unlisted_layer_5_CD4 <- top_genes_unlisted
model_layer_5_CD4 <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_5_CD4, overwrite = TRUE)
usethis::use_data(model_layer_5_CD4, overwrite = TRUE)
rm(list = ls())
load(paste0("~/Downloads/data_expression_T_cell_atlas/classifier_outputs_T_cells/classifier_layer_5_CD8_subtypes.RData"))
top_genes_unlisted_layer_5_CD8 <- top_genes_unlisted
model_layer_5_CD8 <- rf_classifier_cell_lines
usethis::use_data(top_genes_unlisted_layer_5_CD8, overwrite = TRUE)
usethis::use_data(model_layer_5_CD8, overwrite = TRUE)
rm(list = ls())
demo_lung_data <- scATOMIC::demo_lung_data
usethis::use_data(demo_lung_data, overwrite = TRUE)
rm(list = ls())
usethis::use_version()
devtools::document()
devtools::install()
devtools::install()
library(Rmagic)
?magic
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
no
usethis::use_version()
usethis::use_version()
